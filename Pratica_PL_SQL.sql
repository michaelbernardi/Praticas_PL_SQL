SELECT * FROM SEGMERCADO;

-- INCLUSÃO DE SEGMENTO
DECLARE
    v_ID SEGMERCADO.ID%type := 4;
    v_DESCRICAO SEGMERCADO.DESCRICAO%type := 'Esportista';
BEGIN
    INSERT INTO SEGMERCADO (ID, DESCRICAO) VALUES (v_ID, v_DESCRICAO);
    COMMIT;
END;

-- ALTERAÇÃO DE SEGMENTO
DECLARE
    v_ID SEGMERCADO.ID%type := 4;
    v_DESCRICAO SEGMERCADO.DESCRICAO%type:='Esportista';
BEGIN
    UPDATE SEGMERCADO SET DESCRICAO = UPPER(v_DESCRICAO) WHERE ID = v_ID;
    v_ID := 1;
    v_DESCRICAO :='Varejista';
    UPDATE SEGMERCADO SET DESCRICAO = UPPER(v_DESCRICAO) WHERE ID = v_ID;
    COMMIT;
END;  

--EXCLUSÃO SEGMENTO
DECLARE
   v_ID SEGMERCADO.ID%type := 4;
BEGIN

 DELETE FROM SEGMERCADO WHERE ID = v_ID;
 COMMIT;
END;
    
/* A procedure é um nome amigável que damos a um programa,
onde vamos passar parâmetros. Quando chamado, esse programa vai executar
internamente os comandos PL/SQL que estão programados dentro dele.

Eventualmente, a procedure pode retornar um erro. Neste caso, dará um
retorno de um erro que está acontecendo no ambiente.
*/
-- CRIANDO PROCEDURE (INCLUIR SEGMERCADO)
CREATE PROCEDURE INCLUIR_SEGMERCADO
(p_ID IN NUMBER, p_DESCRICAO IN VARCHAR2)
IS
/* Aqui deve-se colocar a declaração de todas as variáveis que serão 
executadas no programa. */
BEGIN
    INSERT INTO SEGMERCADO (ID, DESCRICAO) VALUES (p_ID, UPPER(p_DESCRICAO));
    COMMIT;
END;
-- EXECUÇÃO DIRETA
EXECUTE INCLUIR_SEGMERCADO(5, 'Farmaceuticos');
--EXECUÇÃO EM BLOCO
BEGIN
    INCLUIR_SEGMERCADO(6, 'Veterinarios');
END;

/* ALTERANDO PROCEDURE (COM O 'CRAETE OR REPLACE' GARANTE QUE A PROCEDURE 
SERÁ CRIADA CASO ELA NÃO EXISTA */
CREATE OR REPLACE PROCEDURE INCLUIR_SEGMERCADO
(p_ID IN SEGMERCADO.ID%type, p_DESCRICAO IN SEGMERCADO.DESCRICAO%type)
IS
BEGIN
    INSERT INTO SEGMERCADO (ID, DESCRICAO) VALUES (p_ID, UPPER(p_DESCRICAO));
    COMMIT;
END;

/* DELETANDO UMA PROCEDURE  */
DROP PROCEDURE INCLUIR_SEGMERCADO;
  
/* SET SERVEROUTPUT ON. É para sinalizar que terá uma saída ao executar 
 o script, ou seja, queremos visualizar o conteúdo de alguma variável 
 ou similar no Oracle SQL Developer.    */
SET SERVEROUTPUT ON;

--Retornando descritor do segmento de mercado 
DECLARE
    v_ID SEGMERCADO.ID%type := 3;
    v_DESCRICAO SEGMERCADO.DESCRICAO%type;
BEGIN
    SELECT DESCRICAO INTO v_DESCRICAO FROM SEGMERCADO WHERE ID = v_ID; 
    -- ESTE MODELO DE SELECT E INTO RETORNA APENAS UMA COLUNA E UMA CELULA
    dbms_output.put_line(v_DESCRICAO);
END;

--FUNÇÃO
/*  Passamos parâmetros para a função, se ela executar corretamente, 
sem nenhum erro, ela vai nos retornar um valor. */
CREATE OR REPLACE FUNCTION OBTER_DESCRICAO_SEGMERCADO
(p_ID IN SEGMERCADO.ID%type)
RETURN SEGMERCADO.DESCRICAO%type
IS
    v_DESCRICAO SEGMERCADO.DESCRICAO%type;
BEGIN
    SELECT DESCRICAO INTO v_DESCRICAO FROM SEGMERCADO WHERE ID = p_ID;
    RETURN v_DESCRICAO;
END;

--EXECUÇÃO DA FUNÇÃO OBTER...CRIADA (LOWER É UMA FUNÇÃO NATIVA)
SELECT ID, OBTER_DESCRICAO_SEGMERCADO(ID), LOWER(DESCRICAO), DESCRICAO FROM SEGMERCADO WHERE ID = 1; 

--OUTRAS MANEIRA DE UTILIZAR O RESULTADO DA FUNÇÃO
VARIABLE g_DESCRICAO VARCHAR2(100);
EXECUTE :g_DESCRICAO:= OBTER_DESCRICAO_SEGMERCADO(3);
PRINT G_DESCRICAO;

-- DENTRO DE UM PROGRAMA PL/SQL
SET SERVEROUTPUT ON
DECLARE
 v_ID SEGMERCADO.ID%type := 3;
 v_DESCRICAO SEGMERCADO.DESCRICAO%type;
BEGIN
    v_DESCRICAO := OBTER_DESCRICAO_SEGMERCADO(v_ID);
    dbms_output.put_line('A descrição do segmento de mercado é ' || v_DESCRICAO);
END;

--IINCLUINDO UM NOVO CLIENTE
CREATE OR REPLACE PROCEDURE INCLUIR_CLIENTE(
p_ID CLIENTE.ID%type,
p_RAZAO CLIENTE.RAZAO_SOCIAL%type,
p_CNPJ CLIENTE.CNPJ%type,
p_SEGMERCADO CLIENTE.SEGMERCADO_ID%type,
p_FATURAMENTO CLIENTE.FATURAMENTO_PREVISTO%type,
p_CATEGORIA CLIENTE.CATEGORIA%type) 
IS
BEGIN
    INSERT INTO CLIENTE VALUES(
    p_ID, p_RAZAO, p_CNPJ, p_SEGMERCADO, SYSDATE, p_FATURAMENTO, p_CATEGORIA);
    COMMIT;
END;

SELECT * FROM CLIENTE;
SELECT * FROM SEGMERCADO;

EXECUTE INCLUIR_CLIENTE (1, 'SUPERMERCADOS CAMPEAO', '1234567890', 1, 90000, 'MEDIO GRANDE');

----------------------------------------------------


--OBTENDO A CATEGORIA

-- PEQUENO FATURA ATÉ 10000
-- MÉDIO ENTRE 10001 E 50000
-- MÉDIO GRANDE ENTRE 50001 E 100000
-- GRANDE MAIS DE 100000

--código omitido

SET SERVEROUTPUT ON

DECLARE
    v_FATURAMENTO CLIENTE.FATURAMENTO_PREVISTO%type := 65000;
    v_CATEGORIA CLIENTE.CATEGORIA%type;
BEGIN
    IF v_FATURAMENTO <= 10000 THEN
        v_CATEGORIA := 'PEQUENO';
    ELSIF v_FATURAMENTO <= 50000 THEN
        v_CATEGORIA := 'MÉDIO';
    ELSIF v_FATURAMENTO <= 100000 THEN
        v_CATEGORIA := 'MÉDIO GRANDE';
    ELSE
        v_CATEGORIA := 'GRANDE';
    END IF;
    dbms_output.put_line('A Categoria é ' || v_CATEGORIA);
END;

-------------------------------------------------------------
--FUNÇÃO OBTER CATEGORIA
CREATE OR REPLACE FUNCTION categoria_cliente
(p_FATURAMENTO IN CLIENTE.FATURAMENTO_PREVISTO%type) 
RETURN CLIENTE.CATEGORIA%type
IS
    v_CATEGORIA CLIENTE.CATEGORIA%type;
BEGIN
    IF p_FATURAMENTO <= 10000 THEN
        v_CATEGORIA := 'PEQUENO';
    ELSIF p_FATURAMENTO <= 50000 THEN
        v_CATEGORIA := 'MÉDIO';
    ELSIF p_FATURAMENTO <= 100000 THEN
        v_CATEGORIA := 'MÉDIO GRANDE';
    ELSE
        v_CATEGORIA := 'GRANDE';
    END IF;
    RETURN v_CATEGORIA;
END;

VARIABLE g_DESCRICAO VARCHAR2(100);
EXECUTE :g_DESCRICAO:=obter_descricao_segmercado(3);
PRINT g_DESCRICAO;

VARIABLE g_CATEGORIA VARCHAR2(100);
EXECUTE :g_CATEGORIA:=categoria_cliente(10000);
PRINT g_CATEGORIA;

------------------------------------------------------------------------------
/*  Complementando uma procedure com uma função*/
CREATE OR REPLACE PROCEDURE incluir_cliente
(
p_ID CLIENTE.ID%type,
p_RAZAO CLIENTE.RAZAO_SOCIAL%type,
p_CNPJ CLIENTE.CNPJ%type,
p_SEGMERCADO CLIENTE.SEGMERCADO_ID%type,
p_FATURAMENTO CLIENTE.FATURAMENTO_PREVISTO%type
)
IS
    v_CATEGORIA CLIENTE.CATEGORIA%type;
BEGIN

    v_CATEGORIA := categoria_cliente(p_FATURAMENTO);

    INSERT INTO CLIENTE
    VALUES
    (p_ID, p_RAZAO, p_CNPJ, p_SEGMERCADO, SYSDATE, p_FATURAMENTO, v_CATEGORIA);
    COMMIT;
END;

EXECUTE incluir_cliente(2, 'SUPERMERCADO DO VALE', '1111111111', 1, 90000);
EXECUTE incluir_cliente(3, 'SUPERMERCADO CARIOCA', '2222222222', 1, 30000);
